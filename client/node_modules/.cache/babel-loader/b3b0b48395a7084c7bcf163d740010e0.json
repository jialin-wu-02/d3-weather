{"ast":null,"code":"var _jsxFileName = \"/Users/jialinwu/d3-weather/client/src/components/BoxChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './BoxChart.css';\n\nclass BoxChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      var width = 500;\n      let height = 600; // append the svg object to the div called 'my_dataviz'\n\n      var svg = d3.select(\"#BoxChart\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n      const date = new Date(this.props.daily[0].time * 1000);\n      const currentDate = date.getDay();\n      console.log(currentDate);\n      const dateNameMap = {\n        0: \"Sun\",\n        1: \"Mon\",\n        2: \"Tue\",\n        3: \"Wed\",\n        4: \"Thur\",\n        5: \"Fri\",\n        6: \"Sat\" // xScale is an object to map the input data's domain to the bar chart's range.\n\n      };\n      const xScale = d3.scaleBand().domain(data => dateNameMap[data.time]).range([0, width]).padding(0.1); // band scale data space => screen space\n\n      const yScale = d3.scaleLinear().domain([0, d3.max(this.props.daily, d => d.temperatureHigh)]).range([0, height]);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"BoxChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BoxChart;","map":{"version":3,"sources":["/Users/jialinwu/d3-weather/client/src/components/BoxChart.js"],"names":["React","Component","d3","BoxChart","componentDidMount","width","height","svg","select","append","attr","date","Date","props","daily","time","currentDate","getDay","console","log","dateNameMap","xScale","scaleBand","domain","data","range","padding","yScale","scaleLinear","max","d","temperatureHigh","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAG/BG,iBAH+B,GAGX,MAAM;AACxB,UAAIC,KAAK,GAAG,GAAZ;AACA,UAAIC,MAAM,GAAG,GAAb,CAFwB,CAIxB;;AACA,UAAIC,GAAG,GAAGL,EAAE,CAACM,MAAH,CAAU,WAAV,EACTC,MADS,CACF,KADE,EAELC,IAFK,CAEA,OAFA,EAESL,KAFT,EAGLK,IAHK,CAGA,QAHA,EAGUJ,MAHV,EAITG,MAJS,CAIF,GAJE,EAKLC,IALK,CAKA,WALA,EAKa,eAAeL,KAAK,GAAG,CAAvB,GAA0B,GAA1B,GAAgCC,MAAM,GAAG,CAAzC,GAA6C,GAL1D,CAAV;AAOA,YAAMK,IAAI,GAAG,IAAIC,IAAJ,CAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,IAApB,GAA2B,IAApC,CAAb;AACA,YAAMC,WAAW,GAAGL,IAAI,CAACM,MAAL,EAApB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,YAAMI,WAAW,GAAG;AAChB,WAAG,KADa;AAEhB,WAAG,KAFa;AAGhB,WAAG,KAHa;AAIhB,WAAG,KAJa;AAKhB,WAAG,MALa;AAMhB,WAAG,KANa;AAOhB,WAAG,KAPa,CAUpB;;AAVoB,OAApB;AAWA,YAAMC,MAAM,GAAGnB,EAAE,CAACoB,SAAH,GACVC,MADU,CACHC,IAAI,IAAIJ,WAAW,CAACI,IAAI,CAACT,IAAN,CADhB,EAEVU,KAFU,CAEJ,CAAC,CAAD,EAAIpB,KAAJ,CAFI,EAGVqB,OAHU,CAGF,GAHE,CAAf,CA5BwB,CAiCxB;;AACA,YAAMC,MAAM,GAAGzB,EAAE,CAAC0B,WAAH,GACVL,MADU,CACH,CAAC,CAAD,EAAIrB,EAAE,CAAC2B,GAAH,CAAO,KAAKhB,KAAL,CAAWC,KAAlB,EAAyBgB,CAAC,IAAIA,CAAC,CAACC,eAAhC,CAAJ,CADG,EAEVN,KAFU,CAEJ,CAAC,CAAD,EAAInB,MAAJ,CAFI,CAAf;AAKD,KA1C8B;AAAA;;AA4C/B0B,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAlD4B;;AAqDjC,eAAe7B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nimport './BoxChart.css'\n\nclass BoxChart extends Component {\n\n\n  componentDidMount = () => {\n    var width = 500\n    let height = 600\n\n    // append the svg object to the div called 'my_dataviz'\n    var svg = d3.select(\"#BoxChart\")\n    .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n    .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2+ \",\" + height / 2 + \")\");\n\n    const date = new Date(this.props.daily[0].time * 1000);\n    const currentDate = date.getDay();\n\n    console.log(currentDate)\n    \n    const dateNameMap = {\n        0: \"Sun\",\n        1: \"Mon\",\n        2: \"Tue\",\n        3: \"Wed\",\n        4: \"Thur\",\n        5: \"Fri\",\n        6: \"Sat\"\n    }\n\n    // xScale is an object to map the input data's domain to the bar chart's range.\n    const xScale = d3.scaleBand()\n        .domain(data => dateNameMap[data.time])\n        .range([0, width])\n        .padding(0.1);\n     \n    // band scale data space => screen space\n    const yScale = d3.scaleLinear()\n        .domain([0, d3.max(this.props.daily, d => d.temperatureHigh)])\n        .range([0, height])\n        \n    \n  }\n  \n  render() {\n      return (\n        <div id=\"BoxChart\">\n\n        </div>\n      );\n    }\n  }\n\nexport default BoxChart;"]},"metadata":{},"sourceType":"module"}