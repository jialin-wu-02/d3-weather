{"ast":null,"code":"var _jsxFileName = \"/Users/jialinwu/d3-weather/client/src/components/PieChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './PieChart.css';\n\nclass PieChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      var width = 500;\n      let height = 600; // append the svg object to the div called 'my_dataviz'\n\n      var svg = d3.select(\"#PieChart\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n      var svg1 = d3.select(\"#PieChart\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"); // Create dummy data\n\n      var data = {\n        a: 1,\n        b: 1,\n        c: 1,\n        d: 1,\n        e: 1,\n        f: 1,\n        g: 1,\n        h: 1,\n        i: 1,\n        j: 1,\n        k: 1,\n        l: 1 // calculate current hour:\n\n      };\n      var date = new Date(this.props.hourly[0].time * 1000);\n      var hour = date.getHours();\n\n      let temperature = id => {\n        this.props.hourly[id].temperature;\n      }; // calculate the average of the data:\n\n\n      var sum = 0;\n      var sum1 = 0;\n      var sum2 = 0;\n\n      for (let j = 0; j < 24; j++) {\n        sum += this.props.hourly[j].temperature;\n        j < 12 ? sum1 += this.props.hourly[j].temperature : sum2 += this.props.hourly[j].temperature;\n      }\n\n      var average1 = sum1 / 12;\n      var average2 = sum2 / 12;\n      var average = sum / 24;\n      var dataHeightArray1 = [];\n      var dataHeightArray2 = [];\n      var weatherColorMAP = {\n        \"clear-day\": \"#f5d442\",\n        \"clear-night\": \"#f5d442\",\n        \"cloudy\": \"#87fae3\",\n        \"partly-cloudy-day\": \"#87fae3\",\n        \"partly-cloudy-night\": \"#87fae3\",\n        \"rain\": \"#93cafa\"\n      };\n      var weatherColor1 = [];\n      var weatherColor2 = []; // adding height and color together\n\n      for (let i = 0; i < 12; i++) {\n        dataHeightArray1[(i + hour) % 12] = (this.props.hourly[i].temperature - average) * 8 + 190;\n        weatherColor1[(i + hour) % 12] = weatherColorMAP[this.props.hourly[i].icon];\n      }\n\n      for (let i = 12; i < 24; i++) {\n        dataHeightArray2[(i + hour) % 12] = (this.props.hourly[i].temperature - average) * 8 + 190;\n        weatherColor2[(i + hour) % 12] = weatherColorMAP[this.props.hourly[i].icon];\n      }\n\n      var dataHeight1 = d3.scaleOrdinal().domain(data).range(dataHeightArray1);\n      var dataHeight2 = d3.scaleOrdinal().domain(data).range(dataHeightArray2); // set the color scale\n\n      var color1 = d3.scaleOrdinal().domain(data).range(weatherColor1); // set the color scale\n\n      var color2 = d3.scaleOrdinal().domain(data).range(weatherColor2); // Compute the position of each group on the pie:\n\n      var pie = d3.pie().value(function (d) {\n        return d.value;\n      });\n      var data_ready = pie(d3.entries(data));\n\n      const handleMouseOver = (d, i) => {\n        d3.select(this).attr({\n          fill: \"black\"\n        });\n        console.log(d, i);\n        console.log(111);\n      };\n\n      const handleMouseOut = (d, i) => {\n        console.log(d, i);\n        console.log(222);\n      }; // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n\n\n      svg.selectAll('whatever').data(data_ready).enter().append('path').attr('class', \"arc\").attr('d', d3.arc().innerRadius(130).outerRadius(function (d) {\n        return dataHeight1(d.data.key);\n      })).attr('fill', function (d) {\n        return color1(d.data.key);\n      }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7);\n      svg1.selectAll('whatever').data(data_ready).enter().append('path').attr('class', \"arc\").attr('d', d3.arc().innerRadius(130).outerRadius(function (d) {\n        return dataHeight2(d.data.key);\n      })).attr('fill', function (d) {\n        return color2(d.data.key);\n      }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7).append('title').text(function (d) {\n        return this.props.hourly[d.data.key].temperature;\n      }); // .attr(\"class\", \"center-text\")\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"PieChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default PieChart;","map":{"version":3,"sources":["/Users/jialinwu/d3-weather/client/src/components/PieChart.js"],"names":["React","Component","d3","PieChart","componentDidMount","width","height","svg","select","append","attr","svg1","data","a","b","c","d","e","f","g","h","i","j","k","l","date","Date","props","hourly","time","hour","getHours","temperature","id","sum","sum1","sum2","average1","average2","average","dataHeightArray1","dataHeightArray2","weatherColorMAP","weatherColor1","weatherColor2","icon","dataHeight1","scaleOrdinal","domain","range","dataHeight2","color1","color2","pie","value","data_ready","entries","handleMouseOver","fill","console","log","handleMouseOut","selectAll","enter","arc","innerRadius","outerRadius","key","style","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nimport './PieChart.css'\n\nclass PieChart extends Component {\n\n\n  componentDidMount = () => {\n    var width = 500\n    let height = 600\n\n    // append the svg object to the div called 'my_dataviz'\n    var svg = d3.select(\"#PieChart\")\n    .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n    .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2+ \",\" + height / 2 + \")\");\n\n    var svg1 = d3.select(\"#PieChart\")\n    .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n    .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2+ \",\" + height / 2 + \")\");\n    \n    // Create dummy data\n    var data = {a: 1, b: 1, c:1, d:1, e:1, f:1, g:1, h:1, i:1, j:1, k:1, l: 1}\n\n    // calculate current hour:\n    var date = new Date(this.props.hourly[0].time * 1000);\n    var hour = date.getHours();\n\n    let temperature = (id) => {this.props.hourly[id].temperature};\n\n    // calculate the average of the data:\n    var sum = 0;\n    var sum1 = 0;\n    var sum2 = 0;\n    for (let j = 0; j < 24; j++) {\n      sum += this.props.hourly[j].temperature;\n      j < 12 ? sum1 += this.props.hourly[j].temperature : sum2 += this.props.hourly[j].temperature;\n    }\n    var average1 = sum1 / 12;\n    var average2 = sum2 / 12;\n    var average = sum / 24;\n\n    var dataHeightArray1 = []\n    var dataHeightArray2 = []\n\n    var weatherColorMAP = {\n      \"clear-day\": \"#f5d442\",\n      \"clear-night\": \"#f5d442\",\n      \"cloudy\": \"#87fae3\",\n      \"partly-cloudy-day\": \"#87fae3\",\n      \"partly-cloudy-night\": \"#87fae3\",\n      \"rain\": \"#93cafa\"\n    }\n    var weatherColor1 = [];\n    var weatherColor2 = [];\n    // adding height and color together\n    for (let i = 0; i < 12; i++) {\n      dataHeightArray1[(i + hour) % 12] = (this.props.hourly[i].temperature - average) * 8 + 190;\n      weatherColor1[(i + hour) % 12] = weatherColorMAP[(this.props.hourly[i].icon)]\n    }\n    for (let i = 12; i < 24; i++) {\n      dataHeightArray2[(i + hour) % 12] = (this.props.hourly[i].temperature - average) * 8 + 190;\n      weatherColor2[(i + hour) % 12] = weatherColorMAP[(this.props.hourly[i].icon)]\n    }\n\n    var dataHeight1 = d3.scaleOrdinal()\n    .domain(data)\n    .range(dataHeightArray1)\n  \n    var dataHeight2 = d3.scaleOrdinal()\n    .domain(data)\n    .range(dataHeightArray2)\n\n    // set the color scale\n    var color1 = d3.scaleOrdinal()\n    .domain(data)\n    .range(weatherColor1)\n\n    // set the color scale\n    var color2 = d3.scaleOrdinal()\n    .domain(data)\n    .range(weatherColor2)\n\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie()\n    .value(function(d) {return d.value; })\n    var data_ready = pie(d3.entries(data))\n\n    const handleMouseOver = (d, i) => {\n      d3.select(this).attr({\n        fill: \"black\"\n      })\n      console.log(d, i);\n      console.log(111)\n    }\n\n    const handleMouseOut = (d, i) => {\n      console.log(d, i);\n      console.log(222)\n    }\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n    .selectAll('whatever')\n    .data(data_ready)\n    .enter()\n    .append('path')\n    .attr('class', \"arc\")\n    .attr('d', d3.arc()\n        .innerRadius(130)\n        .outerRadius(function(d){ return (dataHeight1(d.data.key))})\n    )\n    .attr('fill', function(d){ return(color1(d.data.key)) })\n    .attr(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"2px\")\n    .style(\"opacity\", 0.7)\n\n    svg1\n    .selectAll('whatever')\n    .data(data_ready)\n    .enter()\n    .append('path')     \n      .attr('class', \"arc\")\n      .attr('d', d3.arc()\n        .innerRadius(130)\n        .outerRadius(function(d){ return (dataHeight2(d.data.key))}))\n      .attr('fill', function(d){ return(color2(d.data.key)) })\n      .attr(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"2px\")\n      .style(\"opacity\", 0.7)\n    .append('title')\n      .text(function(d){ return (this.props.hourly[(d.data.key)].temperature)})\n      // .attr(\"class\", \"center-text\")\n  }\n  \n  render() {\n      return (\n        <div id=\"PieChart\">\n\n        </div>\n      );\n    }\n  }\n\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}